{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","status","query","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","isLoading","dispatch","visibleTodos","useMemo","filteredTodos","completed","lowerQuery","trim","toLowerCase","title","includes","length","className","map","id","cn","onClick","currentTodoActions","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","setIsLoading","loadCurrentUser","a","userId","loadedUser","Error","useEffect","href","email","name","App","loadTodos","loadedTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb78e92e.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterAction = {\n  type: 'SET_FILTER',\n  payload: Status,\n};\n\ntype QueryAction = {\n  type: 'SET_QUERY',\n  payload: string,\n};\n\nconst setFilter = (status: Status): FilterAction => ({\n  type: 'SET_FILTER',\n  payload: status,\n});\n\nconst setQuery = (query: string): QueryAction => ({\n  type: 'SET_QUERY',\n  payload: query,\n});\n\nconst initialState = {\n  status: 'all',\n  query: '',\n};\n\ntype Action = FilterAction | QueryAction;\n\nexport const actions = { setFilter, setQuery };\n\nconst filterReducer = (\n  state = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'SET_FILTER':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case 'SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\n\nconst todosReducer = (\n  state: State = [],\n  action: SetTodosAction,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ninterface Props {\n  isLoading: boolean\n}\n\nexport const TodoList: React.FC<Props> = ({ isLoading }) => {\n  const todos = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    switch (status) {\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case 'all':\n        filteredTodos = todos;\n        break;\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => {\n        const lowerQuery = query.trim().toLowerCase();\n\n        return todo.title.toLowerCase().includes(lowerQuery);\n      });\n    }\n\n    return filteredTodos;\n  }, [status, query, todos]);\n\n  return (\n    <>\n      {!isLoading && !visibleTodos.length\n      && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      {visibleTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {visibleTodos.map(todo => {\n              const { completed, id, title } = todo;\n\n              return (\n                <tr data-cy=\"todo\" key={id}>\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={cn({\n                      'has-text-success': completed,\n                      'has-text-danger': !completed,\n                    })}\n                    >\n                      {title}\n\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                    >\n                      <span className=\"icon\">\n                        <i className={cn({\n                          'far fa-eye-slash': currentTodo?.id === id,\n                          'far fa-eye': currentTodo?.id !== id,\n                        })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) }\n    </>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { status, query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={\n              (e) => dispatch(actions.setFilter(e.target.value as Status))\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => dispatch(actions.setQuery(event.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          </span>\n        ) }\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadCurrentUser = async () => {\n    if (currentTodo) {\n      try {\n        setIsLoading(true);\n        const loadedUser = await getUser(currentTodo.userId);\n\n        setUser(loadedUser);\n      } catch (error) {\n        throw new Error('Could\\'nt load user');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadCurrentUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading && <Loader /> }\n      {user && currentTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadTodos = async () => {\n    try {\n      setIsLoading(true);\n      const loadedTodos = await getTodos();\n\n      dispatch(actions.setTodos(loadedTodos));\n    } catch (error) {\n      throw new Error('Error loading todos');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n            <div className=\"block\">\n              {isLoading && <Loader /> }\n              {!isLoading && <TodoList isLoading={isLoading} /> }\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}